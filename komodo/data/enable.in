# It's very important that the environment variables in this script and enable.csh.in
# have the exact same names. This is because the situation might occour when komodo is
# sourced in csh but disabled in bash

# This function should be kept in sync with the disable_komodo function in
# komodo_job_dispatch in ert-statoil and ert-configurations

disable_komodo () {
    if [[ -v _PRE_KOMODO_PATH ]]
    then
        PATH="${_PRE_KOMODO_PATH:-}"
        export PATH
        unset _PRE_KOMODO_PATH
    fi

    if [[ -v _PRE_KOMODO_MANPATH ]]
    then
        MANPATH="${_PRE_KOMODO_MANPATH:-}"
        export MANPATH
        unset _PRE_KOMODO_MANPATH
        if [[ -z $MANPATH ]]; then
            unset MANPATH
        fi
    fi

    if [[ -v _PRE_KOMODO_LD_LIBRARY_PATH ]]
    then
        LD_LIBRARY_PATH="${_PRE_KOMODO_LD_LIBRARY_PATH:-}"
        export LD_LIBRARY_PATH
        unset _PRE_KOMODO_LD_LIBRARY_PATH
        if [[ -z $LD_LIBRARY_PATH ]]; then
            unset LD_LIBRARY_PATH
        fi
    fi

    if [ -n "${BASH:-}" -o -n "${ZSH_VERSION:-}" ]
    then
        hash -r
    fi

    if [[ -v _PRE_KOMODO_PS1 ]]
    then
        PS1="${_PRE_KOMODO_PS1:-}"
        export PS1
        unset _PRE_KOMODO_PS1
        if [[ -z $PS1 ]]; then
            unset PS1
        fi
    fi


    unset KOMODO_RELEASE
    unset KOMODO_ROOT
    unset ERT_LSF_SERVER
    if [ ! "${1:-}" = "preserve_disable_komodo" ]
    then
        unset -f disable_komodo
    fi
}

# unset irrelevant variables
disable_komodo preserve_disable_komodo

export KOMODO_RELEASE=komodo_release

export _PRE_KOMODO_PATH="${PATH:-}"
export PATH=komodo_prefix/bin${PATH:+:${PATH}}

export _PRE_KOMODO_MANPATH="${MANPATH:-}"
export MANPATH=komodo_prefix/share/man:${MANPATH:-}

export _PRE_KOMODO_LD_LIBRARY_PATH="$LD_LIBRARY_PATH"
export LD_LIBRARY_PATH=komodo_prefix/lib:komodo_prefix/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}

export _PRE_KOMODO_PS1="${PS1:-}"

log_komodo() {
    if [[ $(type -P "log-komodo-usage") ]]; then
        log-komodo-usage
    fi
    export LOGGED_KOMODO_VERSION=$KOMODO_RELEASE
}

if [[ -n $_PRE_KOMODO_PS1 ]]
then
    # log komodo usage
    if [[ -n $LOGGED_KOMODO_VERSION ]]; then
        # check if version has been logged before
        if [[ $LOGGED_KOMODO_VERSION != $KOMODO_RELEASE ]]; then
            log_komodo
        fi
    else
        log_komodo
    fi
fi
export PS1="(${KOMODO_RELEASE}) ${PS1:-}"

local_script=komodo_prefix/../local
if [ -e $local_script ]; then
   source $local_script
fi

# This should detect bash and zsh, which have a hash command that must
# be called to get it to forget past commands.  Without forgetting
# past commands the $PATH changes we made may not be respected
if [ -n "${BASH:-}" -o -n "${ZSH_VERSION:-}" ] ; then
    hash -r
fi

if [ -d komodo_prefix/../motd/scripts ]
then
    for f in komodo_prefix/../motd/scripts/*
    do
        $f
    done
fi

if [ -d komodo_prefix/../motd/messages ]
then
    cat komodo_prefix/../motd/messages/*
fi
